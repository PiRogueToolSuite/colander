# Generated by Django 3.2.18 on 2023-06-01 08:23

import colander.core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0024_alter_colanderteam_name'),
    ]

    operations = [
        migrations.AlterField(
            model_name='case',
            name='teams',
            field=models.ManyToManyField(blank=True, help_text='Share this case with the selected teams. Press ctrl on your keyboard to select/deselect teams.', null=True, related_name='cases', to='core.ColanderTeam'),
        ),
        migrations.CreateModel(
            name='OutgoingFeed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier.', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
                ('password', models.CharField(default=colander.core.models._random_id, max_length=512)),
                ('description', models.TextField(blank=True, help_text='Add more details about this feed.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation date of this object.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Latest modification of this object.')),
                ('max_tlp', models.CharField(choices=[('RED', 'RED'), ('AMBER', 'AMBER'), ('GREEN', 'GREEN'), ('WHITE', 'WHITE')], default='WHITE', help_text='Traffic Light Protocol, designed to indicate the sharing boundaries to be applied.', max_length=6, verbose_name='TLP')),
                ('max_pap', models.CharField(choices=[('RED', 'RED'), ('AMBER', 'AMBER'), ('GREEN', 'GREEN'), ('WHITE', 'WHITE')], default='WHITE', help_text='Permissible Actions Protocol, designed to indicate how the received information can be used.', max_length=6, verbose_name='PAP')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_outgoingfeed_related', related_query_name='core_outgoingfeeds', to='core.case')),
                ('owner', models.ForeignKey(help_text='Who owns this feed.', on_delete=django.db.models.deletion.CASCADE, related_name='core_outgoingfeed_related', related_query_name='core_outgoingfeeds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EntityOutgoingFeed',
            fields=[
                ('outgoingfeed_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.outgoingfeed')),
                ('content_type', models.ManyToManyField(related_name='entity_out_feed_types', to='contenttypes.ContentType')),
            ],
            bases=('core.outgoingfeed',),
        ),
        migrations.CreateModel(
            name='DetectionRuleOutgoingFeed',
            fields=[
                ('outgoingfeed_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.outgoingfeed')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detection_rule_out_feed_type', to='contenttypes.contenttype')),
            ],
            bases=('core.outgoingfeed',),
        ),
    ]
